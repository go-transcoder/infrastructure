name: triggered
run-name: triggered from another workflow
on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'String specifying the ansible tags to run seperated by comma'
        required: true
      publisher_image:
        description: 'The image if set is required if the tags is publisher'

env:
  REGION: us-east-1

jobs:
  run-playbook:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: debug the input passed to the workflow from api
        run: |
          echo "${{ inputs.tags }}"

      - name: Getting the artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          repo: "go-transcoder/IaC"
          workflow: deploy.yml
          workflow_search: false
          workflow_conclusion: success
          branch: main
          name: tf_ansible_vars_file
          if_no_artifact_found: fail
          allow_forks: false
          path: ./provisioning/environments

      # debugging the tf_ansible_vars_file
      - run: |
          ls ./provisioning/environments/
          cat ./provisioning/environments/tf_ansible_vars_file.yml

      # login to aws to get secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: ${{ secrets.ROLEARN }}
          aws-region: ${{ env.REGION }}

      # Get the private key from secret manager
      - name: Step name
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            SSH_PRIVATE_KEY, PIVOT_KEY
            VAULT_PASS

      # here deploy
      # install the community.aws collection ansible-galaxy collection install community.aws
      - name: Installing required Python packages
        run: |
          pip install botocore
          pip install boto3

      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          # Required, playbook filepath
          playbook: provisioning/playbook.yml
          # Optional, directory where playbooks live
          directory: ./
          # Optional, SSH private key
          key: ${{env.SSH_PRIVATE_KEY}}
          # Optional, encrypted vault password
          vault_password: ${{env.VAULT_PASS}}
          options: |
            --tags "${{ inputs.tags }}"
            --inventory provisioning/environments/prod/
            --extra-vars "publisher_docker_image_url=${{inputs.publisher_image}}"
