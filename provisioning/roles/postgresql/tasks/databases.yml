---
- name: Ensure PostgreSQL databases are present.
  postgresql_db:
    name: "{{ item.name }}"
    lc_collate: "{{ item.lc_collate | default('en_US.UTF-8') }}"
    lc_ctype: "{{ item.lc_ctype | default('en_US.UTF-8') }}"
    encoding: "{{ item.encoding | default('UTF-8') }}"
    template: "{{ item.template | default('template0') }}"
    login_host: "{{ db_host }}"
    login_user: "{{ main_db_user }}"
    login_password: "{{ main_db_pass }}"
    login_unix_socket: "{{ item.login_unix_socket | default(postgresql_unix_socket_directories[0]) }}"
    port: "{{ item.port | default(omit) }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ postgresql_databases }}"
  no_log: "{{ postgres_users_no_log }}"
  #  become: true
  #  become_user: "{{ postgresql_user }}"
  # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  vars:
    ansible_ssh_pipelining: true
    ansible_python_interpreter: "{{ venv_executable }}"


- name: Add the uuid-ossp extension
  community.postgresql.postgresql_query:
    login_host: "{{ db_host }}"
    login_user: "{{ main_db_user }}"
    login_password: "{{ main_db_pass }}"
    db: "{{ item.name }}"
    query: 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'
  with_items: "{{ postgresql_databases }}"
  vars:
    ansible_ssh_pipelining: true
    ansible_python_interpreter: "{{ venv_executable }}"
